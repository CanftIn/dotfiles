#!/usr/bin/env bash

file=~/.vim/plugins
target=~/.vim/bundle
if [[ ! -e "$file" ]]; then
  echo "$file doesn't exist"
  exit 1
fi

containsElement () {
  local e
  for e in "${@:2}"
  do
    [[ "$e" == "$1" ]] && return 0
  done
  return 1
}

repos=$(cat $file)
names=()
existing=()
new=()

for repo in ${repos[@]}
do
  parts=(${repo//\// })
  name=${parts[1]}
  if [[ "$name" == "" ]]; then
    continue
  fi

  path="$target/$name"
  names[${#names[@]}]=$name
  if [[ -d $path ]];then
    existing[${#existing[@]}]=$path
  else
    new[${#new[@]}]="git clone --recursive https://github.com/$repo.git $target/$name"
  fi
done

if command -v parallel &> /dev/null;then
  if [[ "${#existing[@]}" -gt "0" ]];then
    parallel -j0 cd {}\; pwd\; git pull ::: "${existing[@]}"
  fi

  if [[ "${#new[@]}" -gt "0" ]];then
    parallel -j0 ::: "${new[@]}"
  fi
else
  for dir in ${existing[@]}
  do
    pushd $dir > /dev/null
    git pull &
    popd > /dev/null
  done

  for ((i = 0; i < ${#new[@]}; i++))
  do
    eval "${new[$i]} &"
  done

  wait
fi

existing=($(ls $target))
for dir in ${existing[@]}
do
  containsElement "$dir" "${names[@]}"
  if [[ "$?" -eq "0" ]]; then
    continue
  fi

  path="$target/$dir"
  echo "Removing $path"
  rm -rf $path &
done

wait
